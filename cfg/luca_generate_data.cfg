data_root = /home/luca/point_clouds/cans/330ml_can_bound_w_cfg/
objects_file_location = /home/luca/point_clouds/cans/330ml_can_bound_w_cfg/objects.txt
output_root = /home/luca/gpd_data/330ml_can/
num_views_per_object = 20
min_grasps_per_view = 100
max_grasps_per_view = 500
test_views = 2 5 8 13 16

# Path to config file for robot hand geometry
hand_geometry_filename = ../cfg/hand_geometry.cfg

# Path to config file for volume and image geometry
image_geometry_filename = 0

# ==== Robot Hand Geometry Parameters ====
# ========================================
#   volume_width: the width of the volume
#   volume_depth: the depth of the volume
#   volume_height: the height of the volume
#   image_size: the size of the image (width and height; image is square)
#   image_num_channels: the number of channels in the image
volume_width = 0.10
volume_depth = 0.06
volume_height = 0.10
image_size = 60  
image_num_channels = 12

# Grasp candidate generation
#   num_samples: the number of samples to be drawn from the point cloud
#   num_threads: the number of CPU threads to be used
#   nn_radius: the radius for the neighborhood search
#   num_orientations: the number of robot hand orientations to evaluate
#   rotation_axes: the axes about which the point neighborhood gets rotated
num_samples = 500
num_threads = 4
nn_radius = 0.01
num_orientations = 8
num_finger_placements = 10
hand_axes = 2
deepen_hand = 1
friction_coeff = 20
min_viable = 6

# Filtering of candidates
#   min_aperture: the minimum gripper width
#   max_aperture: the maximum gripper width
#   workspace_grasps: dimensions of a cube centered at origin of point cloud; should be smaller than <workspace>
min_aperture = 0.0
max_aperture = 0.85
workspace_grasps = -1 1 -1 1 -1 1

# Grasp image creation
#   remove_plane_before_image_calculation: remove support plane from point cloud to speed up image computations
#   create_image_batches: creates grasp images in batches (less memory usage)
remove_plane_before_image_calculation = 0
create_image_batches = 0


# Plot generate grasps: 
plot_grasps = 0

# Plot results of grasp_detector:
plot_normals = 0
plot_samples = 0
plot_candidates = 0
plot_filtered_candidates = 0
plot_valid_grasps = 0
plot_clustered_grasps = 0
plot_selected_grasps = 0
