# Parameters for data generation
#   data_root: path to input pointclouds
#   objects_file_location: file containing the prefix of the pointcloud's name
#   output_root: path to output .h5 archives
#   num_views_per_object: number of pointclouds for each object
#   min_grasps_per_view: minimum number of positive grasp pose for each pointcloud
#   max_grasps_per_view: maximum number of positive grasp pose for each pointcloud
#   test_views: indexes of the pointclouds to use as test (wrt to tthe name) 
#   plot_grasps: plot succesfull grasps during data generation
#   voxelize_view: if the imput pointclouds get voxelized/downsampled
#   voxel_view_size = voxel size 

#data_root = /home/luca/point_clouds/cans/330ml_can_2cam/
#objects_file_location = /home/luca/point_clouds/cans/330ml_can_2cam/objects.txt
#output_root = /home/luca/gpd_data/330ml_can/
num_views_per_object = 20
test_views = 2 5 8 13 16

data_root = /home/luca/point_clouds/flat_sockets/flat_socket_2cam/
objects_file_location = /home/luca/point_clouds/flat_sockets/flat_socket_2cam/objects.txt
output_root = /home/luca/gpd_data/flat_socket/
#num_views_per_object = 20
#test_views = 2 5 8 13 16 

min_grasps_per_view = 100
max_grasps_per_view = 500
voxelize_view = 1
voxel_view_size = 0.003

# Path to config file for robot hand geometry
hand_geometry_filename = ../cfg/hand_geometry.cfg


# Path to config file for volume and image geometry
image_geometry_filename = ../cfg/luca_image_geometry_data_generation.cfg


# Grasp candidate generation
#   num_samples: the number of samples to be drawn from the point cloud
#   num_threads: the number of CPU threads to be used
#   nn_radius: the radius for the neighborhood search
#   num_orientations: the number of robot hand orientations to evaluate
#   num_finger_placements: the number of finger hand position to evaluate
#   hand_axes: the axes about which the point neighborhood gets rotated
#   deepen_hand: push the hand until it make contact
#   friction_coeff: angle of friction cone in degrees
#   min_viable: minimum number of points required on each side to be antipodal
#   normal_radius_search: the radius for the normal search
num_samples = 300
num_threads = 6
nn_radius = 0.01 
num_orientations = 8
num_finger_placements = 10
hand_axes = 2
deepen_hand = 1
friction_coeff = 20
min_viable = 6
normal_radius_search = 0.03


# Filtering of candidates
#   min_aperture: the minimum gripper width
#   max_aperture: the maximum gripper width
#   workspace_grasps: dimensions of a cube centered at origin of point cloud; should be smaller than <workspace>
min_aperture = 0.0
max_aperture = 0.085
workspace_grasps = -1 1 -1 1 -1 1
hand_constrain_filename = ../cfg/luca_hand_consrain.yaml


# Grasp image creation
#   remove_plane_before_image_calculation: remove support plane from point cloud to speed up image computations
#   create_image_batches: creates grasp images in batches (less memory usage)
remove_plane_before_image_calculation = 0
create_image_batches = 0

plot_grasps = 0
# Plot intermediate results (grasp_detector):
# plot_selected_grasps = 0
plot_samples = 0
plot_normals = 1
# plot_candidates = 1
# plot_filtered_candidates = 1
# plot_valid_grasps = 1
# plot_clustered_grasps = 0




